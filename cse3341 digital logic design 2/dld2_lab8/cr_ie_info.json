{
	"system" : {
		"platform" : "windows64",
		"os_name" : "Windows 10",
		"os_version" : "10.0"
	},
	"error" : {
		"executable" : "quartus_map",
		"comment" : "not_applicable",
		"error_message" : "Access Violation at 0X00007FFBC6176C60",
		"source_file" : "unknown",
		"line" : "0",
		"stack_trace" : "\t0x7ffbc6176c5f: synth_vrfx + 0xa6c5f (?Reverse@Array@@QEAAXXZ + 0x3f)\n\t0x7ffbc62387ac: synth_vrfx + 0x1687ac (?AssignPartial@VeriIdRef@@UEAAXPEAVVeriValue@@0PEAVVeriConstraint@@PEAVNet@@PEAVArray@@I0PEAVVeriIdDef@@PEAVVeriDataFlow@@@Z + 0xe8c)\n\t0x7ffbc623748f: synth_vrfx + 0x16748f (?Assign@VeriIdRef@@UEAAXPEAVVeriValue@@PEAVVeriDataFlow@@PEAVArray@@@Z + 0x17f)\n\t0x7ffbc62376d8: synth_vrfx + 0x1676d8 (?Assign@VeriIndexedName@@UEAAXPEAVVeriValue@@PEAVVeriDataFlow@@PEAVArray@@@Z + 0x178)\n\t0x7ffbc6228eb3: synth_vrfx + 0x158eb3 (?Evaluate@VeriAssignmentOperator@@UEAAPEAVVeriValue@@PEAVVeriConstraint@@PEAVVeriDataFlow@@PEAVVeriIdDef@@@Z + 0x253)\n\t0x7ffbc625f742: synth_vrfx + 0x18f742 (?Elaborate@VeriBlockingAssign@@UEAAXPEAVVeriDataFlow@@@Z + 0x52)\n\t0x7ffbc6261a15: synth_vrfx + 0x191a15 (?Elaborate@VeriSeqBlock@@UEAAXPEAVVeriDataFlow@@@Z + 0xd5)\n\t0x7ffbc62544ad: synth_vrfx + 0x1844ad (?EvaluateConditions@VeriCaseItem@@QEAAXAEAVMap@@IIPEAVVeriIdDef@@PEAVVeriExpression@@PEAVVeriNonConstVal@@PEAVVeriDataFlow@@@Z + 0x43d)\n\t0x7ffbc6263682: synth_vrfx + 0x193682 (?ElaborateCaseItems@VeriCaseStatement@@AEAAPEAVVeriNonConstVal@@AEAVMap@@IIPEAPEAVVeriCaseItem@@PEAVVeriDataFlow@@@Z + 0x232)\n\t0x7ffbc625f825: synth_vrfx + 0x18f825 (?Elaborate@VeriCaseStatement@@UEAAXPEAVVeriDataFlow@@@Z + 0xb5)\n\t0x7ffbc6261a15: synth_vrfx + 0x191a15 (?Elaborate@VeriSeqBlock@@UEAAXPEAVVeriDataFlow@@@Z + 0xd5)\n\t0x7ffbc626037c: synth_vrfx + 0x19037c (?Elaborate@VeriConditionalStatement@@UEAAXPEAVVeriDataFlow@@@Z + 0x14c)\n\t0x7ffbc626065f: synth_vrfx + 0x19065f (?Elaborate@VeriConditionalStatement@@UEAAXPEAVVeriDataFlow@@@Z + 0x42f)\n\t0x7ffbc6261a15: synth_vrfx + 0x191a15 (?Elaborate@VeriSeqBlock@@UEAAXPEAVVeriDataFlow@@@Z + 0xd5)\n\t0x7ffbc62604db: synth_vrfx + 0x1904db (?Elaborate@VeriConditionalStatement@@UEAAXPEAVVeriDataFlow@@@Z + 0x2ab)\n\t0x7ffbc6261a15: synth_vrfx + 0x191a15 (?Elaborate@VeriSeqBlock@@UEAAXPEAVVeriDataFlow@@@Z + 0xd5)\n\t0x7ffbc6260ff0: synth_vrfx + 0x190ff0 (?Elaborate@VeriFor@@UEAAXPEAVVeriDataFlow@@@Z + 0x2c0)\n\t0x7ffbc6261a15: synth_vrfx + 0x191a15 (?Elaborate@VeriSeqBlock@@UEAAXPEAVVeriDataFlow@@@Z + 0xd5)\n\t0x7ffbc6260ca6: synth_vrfx + 0x190ca6 (?Elaborate@VeriEventControlStatement@@UEAAXPEAVVeriDataFlow@@@Z + 0x4f6)\n\t0x7ffbc6259d4d: synth_vrfx + 0x189d4d (?Elaborate@VeriAlwaysConstruct@@UEAAXXZ + 0xad)\n\t0x7ffbc61c0ca2: synth_vrfx + 0xf0ca2 (?Elaborate@VeriModule@@MEAAXXZ + 0x92)\n\t0x7ffbc61c1287: synth_vrfx + 0xf1287 (?Elaborate@VeriModule@@UEAAPEAVNetlist@@PEAVLibrary@@PEAVMap@@PEAVArray@@IPEAPEAVVeriScope@@IPEAVVeriConfiguration@@PEAVBASEX_ELABORATE_INFO@@@Z + 0x587)\n\t0x7ffbc61416b2: synth_vrfx + 0x716b2 (?elaborate@VRFX_VERIFIC_VERILOG_ELABORATOR@@UEAAPEAVNetlist@@PEAVBASEX_ELABORATE_INFO@@@Z + 0x6b2)\n\t0x7ffbc613aa63: synth_vrfx + 0x6aa63 (?elaborate@VRFX_ELABORATOR@@UEAAPEAVHDB_COMPONENT_SCHEMA@@PEAVBASEX_ELABORATE_INFO@@@Z + 0xd3)\n\t0x7ffbdf7dea53: synth_sgn + 0xdea53 (?elaborate@SGN_FN_LIB@@AEBAXPEAVBASEX_ELAB_INFO_CORE@@@Z + 0x263)\n\t0x7ffbdf7e77ef: synth_sgn + 0xe77ef (?start_vrf_flow@SGN_FN_LIB@@AEBAXXZ + 0xf)\n\t0x7ffbdf7e5d89: synth_sgn + 0xe5d89 (?start@SGN_FN_LIB@@QEAAXPEAVSGN_WRAPPER_INFO@@@Z + 0xa29)\n\t0x7ffbdf7c63e1: synth_sgn + 0xc63e1 (?single_module_extraction@SGN_EXTRACTOR@@AEBAKPEAVHDB_INSTANCE_NAME@@PEAVHDB_ENTITY@@PEAVSGN_WRAPPER_INFO@@@Z + 0x161)\n\t0x7ffbdf7ba664: synth_sgn + 0xba664 (?recursive_extraction@SGN_EXTRACTOR@@AEAAKPEAVHDB_INSTANCE_NAME@@PEAVSGN_WRAPPER_INFO@@PEBD@Z + 0x204)\n\t0x7ffbdf7b9faf: synth_sgn + 0xb9faf (?recurse_into_newly_extracted_netlist@SGN_EXTRACTOR@@AEAAXPEAVHDB_ENTITY@@PEAVHDB_INSTANCE_NAME@@KPEAVSGN_WRAPPER_INFO@@@Z + 0x36f)\n\t0x7ffbdf7ba6bb: synth_sgn + 0xba6bb (?recursive_extraction@SGN_EXTRACTOR@@AEAAKPEAVHDB_INSTANCE_NAME@@PEAVSGN_WRAPPER_INFO@@PEBD@Z + 0x25b)\n\t0x7ffbdf7b9faf: synth_sgn + 0xb9faf (?recurse_into_newly_extracted_netlist@SGN_EXTRACTOR@@AEAAXPEAVHDB_ENTITY@@PEAVHDB_INSTANCE_NAME@@KPEAVSGN_WRAPPER_INFO@@@Z + 0x36f)\n\t0x7ffbdf7ba6bb: synth_sgn + 0xba6bb (?recursive_extraction@SGN_EXTRACTOR@@AEAAKPEAVHDB_INSTANCE_NAME@@PEAVSGN_WRAPPER_INFO@@PEBD@Z + 0x25b)\n\t0x7ffbdf7b3888: synth_sgn + 0xb3888 (?extract@SGN_EXTRACTOR@@QEAAXXZ + 0x1e8)\n\t0x7ffbdf713207: synth_sgn + 0x13207 (?sgn_qic_full@@YA?AW4SGN_STATE_ENUM@@PEAVCMP_FACADE@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAV?$vector@NV?$allocator@N@std@@@4@@Z + 0x1a7)\n\t0x7ff600c843af: quartus_map + 0x43af (?qsyn_execute_sgn@@YA?AW4SGN_STATE_ENUM@@PEAVCMP_FACADE@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@PEAVTHR_NAMED_PIPE@@3@Z + 0x13f)\n\t0x7ff600c94246: quartus_map + 0x14246 (?execute_core@QSYN_FRAMEWORK@@AEAA_NPEAVTHR_NAMED_PIPE@@0@Z + 0x136)\n\t0x7ff600c93d2b: quartus_map + 0x13d2b (?execute@QSYN_FRAMEWORK@@UEAA_NXZ + 0x49b)\n\t0x7ffc33b0150c: comp_qexe + 0x1150c (qexe_do_normal + 0x1ec)\n\t0x7ffc33b06622: comp_qexe + 0x16622 (qexe_run + 0x432)\n\t0x7ffc33b07371: comp_qexe + 0x17371 (?qexe_standard_main@@YAHPEAVQEXE_FRAMEWORK@@PEAPEBUQEXE_OPTION_DEFINITION@@HPEAPEBD@Z + 0xc1)\n\t0x7ff600c9b42b: quartus_map + 0x1b42b (?qsyn_main@@YAHHPEAPEBD@Z + 0x53b)\n\t0x7ffc26243258: CCL_MSG + 0x13258 (?msg_main_thread@@YAPEAXPEAX@Z + 0x18)\n\t0x7ffc26244a5e: CCL_MSG + 0x14a5e (?msg_thread_wrapper@@YAPEAXP6APEAXPEAX@Z0@Z + 0x6e)\n\t0x7ffc269a6af0: ccl_mem + 0x16af0 (?mem_thread_wrapper@@YAPEAXP6APEAXPEAX@Z0@Z + 0x70)\n\t0x7ffc26242af1: CCL_MSG + 0x12af1 (?msg_exe_main@@YAHHPEAPEBDP6AHH0@Z@Z + 0xa1)\n\t0x7ff600caa236: quartus_map + 0x2a236 (__tmainCRTStartup + 0x10e)\n\t0x7ffc4ebe7373: KERNEL32 + 0x17373 (BaseThreadInitThunk + 0x13)\n\t0x7ffc4f49cc90: ntdll + 0x4cc90 (RtlUserThreadStart + 0x20)\n",
		"subsystem" : "unknown"
	},
	"quartus" : {
		"quartus_bits" : "64",
		"version" : "20.1.1",
		"build" : "720",
		"edition" : "Lite Edition"
	}
}